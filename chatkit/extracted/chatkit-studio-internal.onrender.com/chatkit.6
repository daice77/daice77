{"title":"ChatKit Overview","id":"thr_37b847a9","created_at":"2025-10-29T15:56:35.876680","status":{"type":"active"},"metadata":{},"items":{"data":[{"id":"msg_813c7949","thread_id":"thr_37b847a9","created_at":"2025-10-29T15:56:36.153552","type":"user_message","content":[{"type":"input_text","text":"What is ChatKit?"}],"attachments":[],"quoted_text":"","inference_options":{}},{"id":"msg_09868d919ee7c2ea006902393bd93881978825c38bc8e0cdd7","thread_id":"thr_37b847a9","created_at":"2025-10-29T15:56:46.828199","type":"assistant_message","content":[{"annotations":[{"type":"annotation","source":{"title":"server.md","type":"file","filename":"server.md"},"index":691}],"text":"ChatKit is a flexible, framework-agnostic library for building modern, real-time chat experiences. It streamlines the process of setting up a chat server and UI by providing both backend integration tools and a frontend (UI) library. \n\nOn the server side, you implement a single endpoint using the framework of your choice. The core server logic centers around subclassing a base class (like `ChatKitServer`), where you define how to process user messages and stream results (messages, widgets, workflow results, etc.) back to the frontend. You can also plug in your own storage solutions for conversation data and attachments, making it ready for production scalability and compliance needs.\n\nOptionally, ChatKit integrates with the OpenAI Agents SDK, so you can build agent-powered assistants with tool support and advanced workflows.\n\nWould you like a demo of what a ChatKit UI widget looks like, or an example of backend setup code?","type":"output_text"}]}],"has_more":false}}