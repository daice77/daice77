{"version":3,"sources":["../../chatkit-web-shared/src/frameEncoding.ts","../../chatkit-web-shared/src/EventEmitter.ts","../../../node_modules/.pnpm/@microsoft+fetch-event-source@2.0.1/node_modules/@microsoft/fetch-event-source/src/parse.ts","../../../node_modules/.pnpm/@microsoft+fetch-event-source@2.0.1/node_modules/@microsoft/fetch-event-source/src/fetch.ts","../../chatkit-web-shared/src/FrameSafeError.ts","../../chatkit-web-shared/src/HttpError.ts","../../chatkit-web-shared/src/requestRetry.ts","../../chatkit-web-shared/src/fetchEventSourceWithRetry.ts","../../chatkit-web-shared/src/IntegrationError.ts","../../chatkit-web-shared/src/BaseMessenger.ts","../src/ChatFrameMessenger.ts","../src/helpers.ts","../../chatkit-web-shared/src/capabilities.ts","../src/ChatKitElementBase.ts","../src/ChatKitElement.ts","../src/autoRegister.ts"],"sourcesContent":["const toUrlBase64 = (bin: string) =>\n  btoa(bin).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\")\n\nconst fromUrlBase64 = (b64: string) => atob(b64.replace(/-/g, \"+\").replace(/_/g, \"/\"))\n\nexport const encodeBase64 = (value: unknown): string => {\n  if (value === undefined) {\n    throw new TypeError(\n      \"encodeBase64: `undefined` cannot be encoded to valid JSON. Pass null instead.\",\n    )\n  }\n  const json = JSON.stringify(value)\n  const bytes = new TextEncoder().encode(json)\n  let bin = \"\"\n  for (const b of bytes) bin += String.fromCharCode(b)\n  return toUrlBase64(bin)\n}\n\nexport const decodeBase64 = <T = unknown>(b64: string): T => {\n  const bin = fromUrlBase64(b64)\n  const bytes = Uint8Array.from(bin, (c) => c.charCodeAt(0))\n  const json = new TextDecoder().decode(bytes)\n  return JSON.parse(json) as T\n}\n","import type { AnyFunction } from \"./types/utility.types\"\n\nexport class EventEmitter<T extends Record<string, unknown> = Record<string, unknown>> {\n  private callbacks = new Map<keyof T, Set<AnyFunction>>()\n\n  on<E extends keyof T>(event: E, callback: (data: T[E]) => void) {\n    if (!this.callbacks.has(event)) {\n      this.callbacks.set(event, new Set())\n    }\n    this.callbacks.get(event)!.add(callback)\n  }\n\n  emit<E extends keyof T>(event: E, ...args: T[E] extends void ? [data?: T[E]] : [data: T[E]]) {\n    // If T[E] is void, args is [], so data is undefined\n    // If T[E] is not void, args is [data]\n    const data = args[0] as T[E]\n    this.callbacks.get(event)?.forEach((callback) => callback(data))\n  }\n\n  off<E extends keyof T>(event: E, callback?: (data: T[E]) => void) {\n    if (!callback) {\n      this.callbacks.delete(event)\n    } else {\n      this.callbacks.get(event)?.delete(callback)\n    }\n  }\n\n  allOff() {\n    this.callbacks.clear()\n  }\n}\n",null,null,"export const FRAME_SAFE_ERROR_KEY = \"__chatkit_error__\"\n\n/**\n * Used for errors emitted as public error events from inner\n * so that the integration can have access to the error name.\n */\nexport class FrameSafeError {\n  [FRAME_SAFE_ERROR_KEY]: string\n  message: string\n  stack?: string\n\n  constructor(error: Error) {\n    this[FRAME_SAFE_ERROR_KEY] = error.name\n    this.message = error.message\n    this.stack = error.stack\n  }\n}\n","import { FRAME_SAFE_ERROR_KEY } from \"./FrameSafeError\"\n\nexport class HttpError extends Error {\n  status?: number\n  statusText?: string\n\n  constructor(message: string, res: Response | { status?: number; statusText?: string }) {\n    super(message)\n    this.name = \"HttpError\"\n    this.statusText = res.statusText\n    this.status = res.status\n  }\n\n  static fromPossibleFrameSafeError(error: unknown): HttpError | null {\n    if (error instanceof HttpError) {\n      return error\n    }\n\n    if (\n      error &&\n      typeof error === \"object\" &&\n      FRAME_SAFE_ERROR_KEY in error &&\n      error[FRAME_SAFE_ERROR_KEY] === \"HttpError\"\n    ) {\n      const safeError = error as FrameSafeHttpError\n      const parsedError = new HttpError(safeError.message, {\n        status: safeError.status,\n        statusText: safeError.statusText,\n      })\n      parsedError.stack = safeError.stack\n      return parsedError\n    }\n\n    return null\n  }\n}\n\n// does not extend Error so that it serializes correctly over structured clone\nexport class FrameSafeHttpError {\n  [FRAME_SAFE_ERROR_KEY] = \"HttpError\"\n  message: string\n  stack?: string\n  status?: number\n  statusText?: string\n\n  constructor(message: string, res: Response | { status?: number; statusText?: string }) {\n    this.message = message\n    this.stack = new Error(message).stack\n    this.status = res.status\n    this.statusText = res.statusText\n  }\n\n  static fromHttpError(error: HttpError): FrameSafeHttpError {\n    return new FrameSafeHttpError(error.message, {\n      status: error.status,\n      statusText: error.statusText,\n    })\n  }\n}\n","// Retry backoff parameters.\n// TODO: consider making this configurable since this concerns API requests made to\n// the integrator's server.\nconst BASE_RETRY_DELAY_MS = 1000\nconst MAX_RETRY_DELAY_MS = 10_000\nexport const MAX_RETRY_ATTEMPTS = 5\n\n// Backoff with half jitter.\n// With the default parameters, results in the following retry delays:\n// 1st: 1â€“2s, 2nd: 2â€“4s, 3rd: 4â€“8s, 4th+: 5â€“10s (capped).\nexport const nextDelay = (\n  attempt: number,\n  maxRetryDelay = MAX_RETRY_DELAY_MS,\n  baseDelayMs = BASE_RETRY_DELAY_MS,\n) => {\n  const max = Math.min(maxRetryDelay, baseDelayMs * 2 ** attempt)\n  // uniform in [0.5*max, max)\n  return Math.floor(max * (0.5 + Math.random() * 0.5))\n}\n","import { fetchEventSource } from \"@microsoft/fetch-event-source\"\n\nimport { FrameSafeHttpError } from \"./HttpError\"\nimport { MAX_RETRY_ATTEMPTS, nextDelay } from \"./requestRetry\"\n\nimport type { FetchEventSourceInit } from \"@microsoft/fetch-event-source\"\n\nclass RetryableError extends Error {\n  constructor(cause: FrameSafeHttpError) {\n    super()\n    this.cause = cause\n  }\n}\n\nexport const fetchEventSourceWithRetry = async (\n  url: string,\n  params: Omit<FetchEventSourceInit, \"onopen\" | \"onerror\" | \"onclose\">,\n) => {\n  let retryAttempt = 0\n  await fetchEventSource(url, {\n    ...params,\n    onopen: async (res) => {\n      if (res.ok && res.headers.get(\"content-type\")?.startsWith(\"text/event-stream\")) {\n        // All is well, we can continue streaming.\n        retryAttempt = 0 // reset on success\n        return\n      }\n\n      // Throw FrameSafeHttpError so that it serializes correctly over postMessage\n      const httpError = new FrameSafeHttpError(`Streaming failed: ${res.statusText}`, res)\n\n      if (res.status >= 400 && res.status < 500) {\n        // This is likely a fatal error, client's are supposed to send errors as SSE\n        // but we can handle this gracefully by ending the streaming state. It could be\n        // that this error is due to a misconfigured server or an upstream proxy returning\n        // an error, etc.\n        throw httpError\n      } else {\n        // A 5xx error, we can let the client retry.\n        throw new RetryableError(httpError)\n      }\n    },\n    onerror: (error) => {\n      if (error instanceof RetryableError) {\n        if (retryAttempt >= MAX_RETRY_ATTEMPTS) {\n          throw error.cause\n        }\n\n        retryAttempt += 1\n        return nextDelay(retryAttempt) // returning a number sets the retry wait\n      }\n\n      // All other errors are fatal and should not be retried.\n      // TODO: log error for monitoring purposes\n      throw error\n    },\n  })\n}\n","import { FRAME_SAFE_ERROR_KEY } from \"./FrameSafeError\"\n\nexport class IntegrationError extends Error {\n  _name: string\n\n  constructor(message: string) {\n    super(message)\n    this.name = \"IntegrationError\"\n    this._name = this.name\n  }\n\n  static fromPossibleFrameSafeError(error: unknown): IntegrationError | null {\n    if (\n      error &&\n      typeof error === \"object\" &&\n      FRAME_SAFE_ERROR_KEY in error &&\n      error[FRAME_SAFE_ERROR_KEY] === \"IntegrationError\"\n    ) {\n      const safeError = error as FrameSafeIntegrationError\n      const parsedError = new IntegrationError(safeError.message)\n      parsedError.stack = safeError.stack\n      return parsedError\n    }\n    return null\n  }\n}\n\n// does not extend Error so that it serializes correctly over structured clone\nexport class FrameSafeIntegrationError {\n  [FRAME_SAFE_ERROR_KEY] = \"IntegrationError\"\n  message: string\n  stack?: string\n  constructor(message: string) {\n    this.message = message\n    this.stack = new Error(message).stack\n  }\n}\n","import { EventEmitter } from \"chatkit-web-shared/EventEmitter\"\n\nimport { fetchEventSourceWithRetry } from \"./fetchEventSourceWithRetry\"\nimport { FrameSafeHttpError, HttpError } from \"./HttpError\"\nimport { FrameSafeIntegrationError, IntegrationError } from \"./IntegrationError\"\n\nimport type { AnyFunction } from \"./types/utility.types\"\nimport type { EventSourceMessage, FetchEventSourceInit } from \"@microsoft/fetch-event-source\"\n\ntype ChatKitMessage =\n  | {\n      type: \"command\"\n      nonce: string\n      command: string\n      data: unknown\n    }\n  | {\n      type: \"response\"\n      nonce: string\n      response?: unknown\n      error?: unknown\n    }\n  | {\n      type: \"fetch\"\n      nonce: string\n      params: RequestInit\n      formData?: Record<string, unknown>\n      url: string\n    }\n  | {\n      type: \"abortSignal\"\n      nonce: string\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      reason?: any\n    }\n  | {\n      type: \"fetchEventSource\"\n      nonce: string\n      params: Omit<FetchEventSourceInit, \"onmessage\" | \"onerror\" | \"onopen\" | \"onclose\">\n      url: string\n    }\n  | {\n      type: \"fetchEventSourceMessage\"\n      nonce: string\n      message: EventSourceMessage\n    }\n  | {\n      type: \"event\"\n      event: string\n      data: unknown\n    }\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n// TODO - some kind of ready state / queue for messages while waiting for the target to be ready\nexport abstract class BaseMessenger<\n  Commands extends Record<string, AnyFunction> = Record<string, never>,\n  ReceivedCommands extends Record<string, AnyFunction> = Record<string, never>,\n  Events extends Record<string, any> = Record<string, never>,\n  ReceivedEvents extends Record<string, any> = Record<string, never>,\n> {\n  private targetOrigin: string\n  private target: () => Window | null\n  private commandHandlers: Record<string, AnyFunction>\n  private _fetch: typeof window.fetch\n\n  // Override this method to implement runtime command capability validation\n  abstract canReceiveCommand(_: string): boolean\n\n  constructor({\n    handlers,\n    target,\n    targetOrigin,\n    fetch = window.fetch,\n  }: {\n    target: () => Window | null\n    targetOrigin: string\n    fetch?: typeof window.fetch\n    handlers: {\n      [K in keyof ReceivedCommands as K extends `${infer C}${infer S}`\n        ? `on${Capitalize<C>}${S}`\n        : never]: (\n        data: Parameters<ReceivedCommands[K]>[0],\n      ) => ReturnType<ReceivedCommands[K]> | Promise<ReturnType<ReceivedCommands[K]>>\n    }\n  }) {\n    this.commandHandlers = handlers\n    this.target = target\n    this.targetOrigin = targetOrigin\n    this._fetch = ((...args) => fetch(...args)) as typeof window.fetch\n  }\n\n  private emitter = new EventEmitter<Record<string, unknown>>()\n  private handlers = new Map<\n    string,\n    { resolve: (data: unknown) => void; reject: (err: unknown) => void; stack: string }\n  >()\n  private fetchEventSourceHandlers = new Map<\n    string,\n    {\n      onmessage?: (ev: EventSourceMessage) => void\n      onclose?: () => void\n    }\n  >()\n  private abortControllers = new Map<string, AbortController>()\n\n  private sendMessage(data: ChatKitMessage, transfer?: Transferable[]) {\n    const message = {\n      __oaiChatKit: true,\n      ...data,\n    }\n    this.target()?.postMessage(message, this.targetOrigin, transfer)\n  }\n\n  connect() {\n    window.addEventListener(\"message\", this.handleMessage)\n  }\n\n  disconnect() {\n    window.removeEventListener(\"message\", this.handleMessage)\n  }\n\n  fetch<T = unknown>(url: string, params: RequestInit) {\n    return new Promise<unknown>((resolve, reject) => {\n      const nonce = crypto.randomUUID()\n      this.handlers.set(nonce, { resolve, reject, stack: new Error().stack || \"\" })\n\n      // Special case for FormData since it isn't structured cloneable\n      let formData: Record<string, unknown> | undefined\n      if (params.body instanceof FormData) {\n        formData = {}\n        for (const [key, value] of params.body.entries()) {\n          formData[key] = value\n        }\n        params.body = undefined\n      }\n\n      // special case for abortSignal since it isn't structured cloneable\n      if (params.signal) {\n        params.signal.addEventListener(\"abort\", () => {\n          this.sendMessage({\n            type: \"abortSignal\",\n            nonce,\n            reason: params.signal?.reason,\n          })\n        })\n        params.signal = undefined\n      }\n\n      this.sendMessage({ type: \"fetch\", nonce, params, formData, url })\n    }) as Promise<T>\n  }\n\n  // Supporting onopen would require a good way for us to serialize the Response object\n  // across the iframe boundary, which is not trivial and also not really necessary.\n  fetchEventSource(\n    url: string,\n    params: Omit<FetchEventSourceInit, \"onopen\" | \"onerror\" | \"onclose\">,\n  ) {\n    return new Promise<unknown>((resolve, reject) => {\n      const { onmessage, signal, ...rest } = params\n      const nonce = crypto.randomUUID()\n\n      this.handlers.set(nonce, { resolve, reject, stack: new Error().stack || \"\" })\n      this.fetchEventSourceHandlers.set(nonce, {\n        onmessage,\n      })\n\n      // special case for abortSignal since it isn't structured cloneable\n      if (signal) {\n        signal.addEventListener(\"abort\", () => {\n          this.sendMessage({\n            type: \"abortSignal\",\n            nonce,\n            reason: signal.reason,\n          })\n        })\n      }\n\n      this.sendMessage({ type: \"fetchEventSource\", nonce, params: rest, url })\n    }) as Promise<void>\n  }\n\n  commands = new Proxy(\n    {},\n    {\n      get: (_, command: string) => {\n        return (data: Record<string, unknown>, transfer?: Transferable[]) => {\n          return new Promise<unknown>((resolve, reject) => {\n            const nonce = crypto.randomUUID()\n            this.handlers.set(nonce, { resolve, reject, stack: new Error().stack || \"\" })\n            this.sendMessage(\n              {\n                type: \"command\",\n                nonce,\n                command: `on${command.charAt(0).toUpperCase()}${command.slice(1)}`,\n                data,\n              },\n              transfer,\n            )\n          })\n        }\n      },\n    },\n  ) as {\n    [K in keyof Commands]: (\n      ...args: Commands[K] extends () => any\n        ? [data?: void, transfer?: void]\n        : [data: Parameters<Commands[K]>[0], transfer?: Transferable[]]\n    ) => Promise<Awaited<ReturnType<Commands[K]>>>\n  }\n\n  emit<E extends keyof Events>(\n    ...[event, data, transfer]: Events[E] extends void\n      ? [event: E]\n      : [event: E, data: Events[E], transfer?: Transferable[]]\n  ) {\n    this.sendMessage(\n      {\n        type: \"event\" as const,\n        event: event as string,\n        data,\n      },\n      transfer,\n    )\n  }\n\n  on<E extends keyof ReceivedEvents>(\n    ...[event, callback]: ReceivedEvents[E] extends void\n      ? [event: E, callback: () => void]\n      : [event: E, callback: (data: ReceivedEvents[E]) => void]\n  ) {\n    this.emitter.on(event as string, callback as AnyFunction)\n  }\n\n  destroy() {\n    window.removeEventListener(\"message\", this.handleMessage)\n    this.emitter.allOff()\n    this.handlers.clear()\n  }\n\n  private handleMessage = async (event: MessageEvent) => {\n    if (\n      !event.data ||\n      event.data.__oaiChatKit !== true ||\n      event.origin !== this.targetOrigin ||\n      event.source !== this.target()\n    ) {\n      return\n    }\n\n    const data = event.data as ChatKitMessage\n\n    switch (data.type) {\n      case \"event\": {\n        this.emitter.emit(data.event, data.data)\n        break\n      }\n      case \"fetch\": {\n        // TODO - handle server errors - non-200 status codes or whatever\n        try {\n          // Special case for FormData since it isn't structured cloneable\n          if (data.formData) {\n            const formData = new FormData()\n            for (const [key, value] of Object.entries(data.formData)) {\n              formData.append(key, value as string)\n            }\n            data.params.body = formData\n          }\n\n          // special case for abortSignal since it isn't structured cloneable\n          const controller = new AbortController()\n          this.abortControllers.set(data.nonce, controller)\n          data.params.signal = controller.signal\n\n          const res = await this._fetch(data.url, data.params)\n\n          if (!res.ok) {\n            // TODO - structured errors from ChatKit SDK so we can handle these a bit better\n            const message = await res\n              .json()\n              .then((json) => json.message || res.statusText)\n              .catch(() => res.statusText)\n\n            throw new FrameSafeHttpError(message, res)\n          }\n\n          // TODO: only accept non-JSON responses when fetching external API\n          // (e.g. S3/Azure blob storage uploads)\n          const json = await res.json().catch(() => ({}))\n          this.sendMessage({\n            type: \"response\",\n            response: json,\n            nonce: data.nonce,\n          })\n        } catch (error) {\n          this.sendMessage({\n            type: \"response\",\n            error,\n            nonce: data.nonce,\n          })\n        }\n        break\n      }\n      case \"fetchEventSource\": {\n        try {\n          // special case for abortSignal since it isn't structured cloneable\n          const controller = new AbortController()\n          this.abortControllers.set(data.nonce, controller)\n          await fetchEventSourceWithRetry(data.url, {\n            ...data.params,\n            signal: controller.signal,\n            fetch: this._fetch,\n            onmessage: (message) => {\n              this.sendMessage({\n                type: \"fetchEventSourceMessage\",\n                message,\n                nonce: data.nonce,\n              })\n            },\n          })\n          this.sendMessage({\n            type: \"response\",\n            response: undefined,\n            nonce: data.nonce,\n          })\n        } catch (error) {\n          this.sendMessage({\n            type: \"response\",\n            error,\n            nonce: data.nonce,\n          })\n        }\n        break\n      }\n      case \"command\": {\n        if (!this.canReceiveCommand(data.command)) {\n          this.sendMessage({\n            type: \"response\",\n            error: new FrameSafeIntegrationError(`Command ${data.command} not supported`),\n            nonce: data.nonce,\n          })\n          return\n        }\n        try {\n          const response = await this.commandHandlers[data.command]?.(data.data)\n          this.sendMessage({\n            type: \"response\",\n            response,\n            nonce: data.nonce,\n          })\n        } catch (error) {\n          this.sendMessage({\n            type: \"response\",\n            error,\n            nonce: data.nonce,\n          })\n        }\n        break\n      }\n      case \"response\": {\n        const handler = this.handlers.get(data.nonce)\n        if (!handler) {\n          // log this\n          // eslint-disable-next-line no-console\n          console.error(\"No handler found for nonce\", data.nonce)\n          return\n        }\n        if (data.error) {\n          const integrationError = IntegrationError.fromPossibleFrameSafeError(data.error)\n          const httpError = HttpError.fromPossibleFrameSafeError(data.error)\n          if (integrationError) {\n            // Set the stack from the handler so the user can see where the\n            // error originated in their own integration code.\n            integrationError.stack = handler.stack\n            handler.reject(integrationError)\n          } else if (httpError) {\n            handler.reject(httpError)\n          } else {\n            handler.reject(data.error)\n          }\n        } else {\n          handler.resolve(data.response)\n        }\n        this.handlers.delete(data.nonce)\n        break\n      }\n      case \"fetchEventSourceMessage\": {\n        const handler = this.fetchEventSourceHandlers.get(data.nonce)\n        if (!handler) {\n          // log this\n          // eslint-disable-next-line no-console\n          console.error(\"No handler found for nonce\", data.nonce)\n          return\n        }\n        this.fetchEventSourceHandlers.get(data.nonce)?.onmessage?.(data.message)\n        break\n      }\n      case \"abortSignal\": {\n        const controller = this.abortControllers.get(data.nonce)\n        if (controller) {\n          controller.abort(data.reason)\n          this.abortControllers.delete(data.nonce)\n        }\n        break\n      }\n      default: {\n        data satisfies never\n        // log this\n        break\n      }\n    }\n  }\n}\n","import { BaseMessenger } from \"chatkit-web-shared/BaseMessenger\"\nimport { InnerCommands, InnerEvents, OuterCommands, OuterEvents } from \"chatkit-web-shared/types\"\n\nexport class ChatFrameMessenger extends BaseMessenger<\n  OuterCommands,\n  InnerCommands,\n  OuterEvents,\n  InnerEvents\n> {\n  // Messenger running in outer can always handle commands coming from inner\n  canReceiveCommand(_: string) {\n    return true\n  }\n}\n","// ChatKitElement.ts\n\nimport type { RemoveMethods } from \"chatkit-web-shared/types\"\n\nexport const removeMethods = <T>(obj: T, seen = new WeakSet<object>()): RemoveMethods<T> => {\n  if (typeof obj === \"function\") return \"[ChatKitMethod]\" as RemoveMethods<T>\n  if (typeof obj !== \"object\" || obj === null) return obj as RemoveMethods<T>\n  if (seen.has(obj)) return obj as RemoveMethods<T>\n  seen.add(obj)\n\n  if (Array.isArray(obj)) {\n    return obj.map((c) => removeMethods(c, seen)) as RemoveMethods<T>\n  }\n\n  const result: Record<string, unknown> = {}\n  for (const [key, value] of Object.entries(obj)) {\n    if (typeof value !== \"function\") {\n      result[key] = removeMethods(value as unknown, seen)\n    } else {\n      result[key] = \"[ChatKitMethod]\"\n    }\n  }\n  return result as RemoveMethods<T>\n}\n\nexport const debounce = (fn: () => void, delay = 150) => {\n  let timer: ReturnType<typeof setTimeout>\n  return () => {\n    clearTimeout(timer)\n    timer = setTimeout(fn, delay)\n  }\n}\n","import type { ChatKitProfile, ChatKitReq, OuterCommands, PublicEvents, ThreadItem } from \"./types\"\nimport type { AssertNever } from \"./types/utility.types\"\n\n// This is a type-only namespace and will disappear after compile.\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Capability {\n  export type Command = keyof OuterCommands\n  export type Event = keyof PublicEvents\n\n  export type BackendOperation = ChatKitReq[\"type\"]\n  export type ThreadItemType = ThreadItem[\"type\"]\n\n  export type Key =\n    | `command.${Command}`\n    | `event.${Event}`\n    | `thread.item.${ThreadItemType}`\n    | `backend.${BackendOperation}`\n\n  export type Rules = {\n    allow?: readonly Key[] // allow-list\n    deny?: readonly Key[] // optional additional denies\n  }\n}\n\n// Publicly exported capabili\nexport type Capabilities = {\n  commands: Set<Capability.Command>\n  events: Set<Capability.Event>\n  backend: Set<Capability.BackendOperation>\n  threadItems: Set<Capability.ThreadItemType>\n}\n\n// Default capabilities. We intersect this with allow/deny lists on profiles\n// to compute effective capabilities.\nconst BASE_CAPABILITY_ALLOWLIST = [\n  // commands\n  \"command.setOptions\",\n  \"command.sendUserMessage\",\n  \"command.setComposerValue\",\n  \"command.setThreadId\",\n  \"command.focusComposer\",\n  \"command.fetchUpdates\",\n  \"command.sendCustomAction\",\n  // events\n  \"event.ready\",\n  \"event.error\",\n  \"event.log\",\n  \"event.response.start\",\n  \"event.response.end\",\n  \"event.thread.change\",\n  \"event.thread.load.start\",\n  \"event.thread.load.end\",\n  \"event.deeplink\",\n  // backend\n  \"backend.threads.get_by_id\",\n  \"backend.threads.list\",\n  \"backend.threads.update\",\n  \"backend.threads.delete\",\n  \"backend.threads.create\",\n  \"backend.threads.add_user_message\",\n  \"backend.threads.add_client_tool_output\",\n  \"backend.threads.retry_after_item\",\n  \"backend.threads.custom_action\",\n  \"backend.attachments.create\",\n  \"backend.attachments.get_preview\",\n  \"backend.attachments.delete\",\n  \"backend.items.list\",\n  \"backend.items.feedback\",\n  // thread item types\n  \"thread.item.user_message\",\n  \"thread.item.assistant_message\",\n  \"thread.item.client_tool_call\",\n  \"thread.item.widget\",\n  \"thread.item.task\",\n  \"thread.item.workflow\",\n  \"thread.item.end_of_turn\",\n] as const satisfies readonly Capability.Key[]\n\nconst BASE_CAPABILITY_DENYLIST = [\n  // --- commands\n  \"command.shareThread\",\n  \"command.showHistory\",\n  \"command.hideHistory\",\n  \"command.setTrainingOptOut\",\n  // History toggling only available via commands for chatgpt shell.\n  // For core chatkit, users should use the chatkit-provided history header button.\n  \"command.showHistory\",\n  \"command.hideHistory\",\n  // --- events\n  \"event.response.stop\",\n  \"event.thread.restore\",\n  \"event.message.share\",\n  \"event.image.download\",\n  \"event.history.open\",\n  \"event.history.close\",\n  \"event.log.chatgpt\",\n  // --- backend\n  \"backend.threads.share\",\n  \"backend.threads.create_from_shared\",\n  \"backend.threads.stop\",\n  \"backend.threads.init\",\n  \"backend.attachments.process\",\n  // thread items\n  \"thread.item.image_generation\",\n] as const satisfies readonly Capability.Key[]\n\nconst PROFILE_TO_RULES = {\n  \"chatkit\": {\n    allow: BASE_CAPABILITY_ALLOWLIST,\n    deny: BASE_CAPABILITY_DENYLIST,\n  },\n  \"chatgpt-shell\": {\n    allow: [\n      ...BASE_CAPABILITY_ALLOWLIST,\n      // commands\n      \"command.shareThread\",\n      \"command.showHistory\",\n      \"command.hideHistory\",\n      // events\n      \"event.response.stop\",\n      \"event.thread.restore\",\n      \"event.message.share\",\n      \"event.image.download\",\n      \"event.history.open\",\n      \"event.history.close\",\n      \"event.log.chatgpt\",\n      // backend\n      \"backend.threads.share\",\n      \"backend.threads.create_from_shared\",\n      \"backend.threads.stop\",\n      \"backend.threads.init\",\n      \"backend.attachments.process\",\n      // thread items\n      \"thread.item.image_generation\",\n    ],\n    deny: [\n      // Prevent ChatGPT user messages and internal errors from leaking through logs\n      \"event.log\",\n      // No client tool support\n      \"backend.threads.add_client_tool_output\",\n    ],\n  },\n  // For anon users, the following features (that are enabled for logged-in chatgpt shell users) are limited:\n  // - thread share (viewing a shared thread is possible)\n  // - thread history\n  \"chatgpt-shell-anonymous\": {\n    allow: [\n      ...BASE_CAPABILITY_ALLOWLIST,\n      // commands\n      \"command.setTrainingOptOut\",\n      // events\n      \"event.response.stop\",\n      \"event.thread.restore\",\n      \"event.history.open\",\n      \"event.history.close\",\n      \"event.message.share\",\n      \"event.log.chatgpt\",\n      // backend\n      \"backend.threads.create_from_shared\",\n      \"backend.threads.stop\",\n      \"backend.threads.init\",\n      \"backend.attachments.process\",\n      // thread items\n      \"thread.item.image_generation\",\n    ],\n    deny: [\n      // Prevent ChatGPT user messages and internal errors from leaking through logs\n      \"event.log\",\n      // No client tool support\n      \"backend.threads.add_client_tool_output\",\n      // No thread history support\n      \"backend.threads.list\",\n    ],\n  },\n} satisfies Record<ChatKitProfile, Capability.Rules>\n\ntype AllowedCapability<T extends ChatKitProfile> = NonNullable<\n  (typeof PROFILE_TO_RULES)[T][\"allow\"]\n>[number]\ntype DeniedCapability<T extends ChatKitProfile> = NonNullable<\n  (typeof PROFILE_TO_RULES)[T][\"deny\"]\n>[number]\ntype CapabilitiesFor<T extends ChatKitProfile> = Exclude<AllowedCapability<T>, DeniedCapability<T>>\n\nexport type AllowedEvent<T extends ChatKitProfile> =\n  Extract<CapabilitiesFor<T>, `event.${string}`> extends `event.${infer E}` ? E : never\n\nexport const getCapabilities = (profile: ChatKitProfile): Capabilities => {\n  const rules = PROFILE_TO_RULES[profile]\n  const effective = new Set(rules.allow)\n  for (const capability of rules.deny ?? []) {\n    effective.delete(capability)\n  }\n\n  const commands = new Set<Capability.Command>()\n  const events = new Set<Capability.Event>()\n  const backend = new Set<Capability.BackendOperation>()\n  const threadItems = new Set<Capability.ThreadItemType>()\n\n  for (const capability of effective) {\n    if (capability.startsWith(\"command.\")) {\n      commands.add(capability.slice(\"command.\".length) as Capability.Command)\n      continue\n    }\n    if (capability.startsWith(\"event.\")) {\n      events.add(capability.slice(\"event.\".length) as Capability.Event)\n      continue\n    }\n    if (capability.startsWith(\"backend.\")) {\n      backend.add(capability.slice(\"backend.\".length) as Capability.BackendOperation)\n      continue\n    }\n    if (capability.startsWith(\"thread.item.\")) {\n      threadItems.add(capability.slice(\"thread.item.\".length) as Capability.ThreadItemType)\n    }\n  }\n\n  return { commands, events, backend, threadItems }\n}\n\n// --- Compile-time checks to make sure base capability lists are comprehensive\n\nconst _ALL_CAPABILITIES = [...BASE_CAPABILITY_ALLOWLIST, ...BASE_CAPABILITY_DENYLIST] as const\ndeclare type _MissingFromCapabilityLists = AssertNever<\n  Exclude<Capability.Key, (typeof _ALL_CAPABILITIES)[number]>\n>\ndeclare type _ExtraInCapabilityLists = AssertNever<\n  Exclude<(typeof _ALL_CAPABILITIES)[number], Capability.Key>\n>\n","import { encodeBase64 } from \"chatkit-web-shared/frameEncoding\"\n\nimport { ChatFrameMessenger } from \"./ChatFrameMessenger\"\nimport { removeMethods } from \"./helpers\"\n\nimport type {\n  Attachment,\n  ChatKitFrameParams,\n  ChatKitOptions,\n  ChatKitProfile,\n  ChatKitInnerOptions,\n  ToolChoice,\n} from \"chatkit-web-shared/types\"\nimport {\n  getCapabilities,\n  type Capabilities,\n  type Capability,\n} from \"chatkit-web-shared/capabilities\"\nimport { IntegrationError } from \"chatkit-web-shared/IntegrationError\"\n\nconst CHATKIT_FRAME_URL = import.meta.env.CHATKIT_FRAME_URL\n\n// Compute inner options by removing methods (to make options serializable)\nfunction getInnerOptions(options: ChatKitOptions): ChatKitInnerOptions {\n  return removeMethods(options) as ChatKitInnerOptions\n}\n\n// Decorator to assert that a command is available for the current capabilities profile\nexport function requireCommandCapability<\n  This extends ChatKitElementBase<unknown>,\n  Args extends unknown[],\n  Return,\n>(\n  value: (this: This, ...args: Args) => Return,\n  context: ClassMethodDecoratorContext<This, (this: This, ...args: Args) => Return>,\n) {\n  const command = String(context.name)\n  return function (this: This, ...args: Args) {\n    if (!this.capabilities.commands.has(command as Capability.Command)) {\n      throw new IntegrationError(\n        `ChatKit command \"${String(command)}\" is not available for the \"${this.profile}\" profile.`,\n      )\n    }\n    return value.apply(this, args)\n  }\n}\n\ninterface ChatKitBaseElementEventMap {\n  \"chatkit.ready\": CustomEvent<void>\n  \"chatkit.error\": CustomEvent<{ error: Error }>\n  \"chatkit.response.start\": CustomEvent<void>\n  \"chatkit.response.end\": CustomEvent<void>\n  \"chatkit.thread.change\": CustomEvent<{ threadId: string | null }>\n  \"chatkit.log\": CustomEvent<{ name: string; data?: Record<string, unknown> }>\n  \"chatkit.deeplink\": CustomEvent<{ name: string; data?: Record<string, unknown> }>\n  \"chatkit.widget.action\": CustomEvent<{ action: string; payload?: Record<string, unknown> }>\n}\n\nexport abstract class ChatKitElementBase<TRawOptions> extends HTMLElement {\n  protected profile: ChatKitProfile\n  protected capabilities: Capabilities\n  protected abstract sanitizeOptions(options: TRawOptions): ChatKitOptions\n\n  #opts?: ChatKitOptions\n  #frame?: HTMLIFrameElement\n  #wrapper?: HTMLDivElement\n\n  #shadow = this.attachShadow({ mode: \"open\" })\n\n  #resolveLoaded?: () => void\n  #loaded = new Promise<void>((resolve) => {\n    this.#resolveLoaded = resolve\n  })\n\n  #messenger = new ChatFrameMessenger({\n    fetch: ((...args) => {\n      const customFetch = this.#opts?.api && \"fetch\" in this.#opts.api && this.#opts.api.fetch\n      return customFetch ? customFetch(...args) : fetch(...args)\n    }) as typeof fetch,\n    target: () => this.#frame?.contentWindow ?? null,\n    targetOrigin: new URL(CHATKIT_FRAME_URL).origin,\n    handlers: {\n      onFileInputClick: ({ inputAttributes }) => {\n        return new Promise<File[]>((resolve) => {\n          const input = document.createElement(\"input\")\n          for (const [key, value] of Object.entries(inputAttributes)) {\n            input.setAttribute(key, String(value))\n          }\n          const respond = () => {\n            resolve(Array.from(input.files || []))\n            if (this.#shadow.contains(input)) {\n              this.#shadow.removeChild(input)\n            }\n          }\n          input.addEventListener(\"cancel\", respond)\n          input.addEventListener(\"change\", respond)\n          this.#shadow.appendChild(input)\n          input.click()\n        })\n      },\n      onClientToolCall: async ({\n        name,\n        params,\n      }: {\n        name: string\n        params: Record<string, unknown>\n      }) => {\n        const onClientTool = this.#opts?.onClientTool\n        if (!onClientTool) {\n          this.#emitAndThrow(\n            new IntegrationError(\n              `No handler for client tool calls. You'll need to add onClientTool to your ChatKit options.`,\n            ),\n          )\n        }\n        return onClientTool({ name, params })\n      },\n      onWidgetAction: async ({ action, widgetItem }) => {\n        const onAction = this.#opts?.widgets?.onAction\n        if (!onAction) {\n          this.#emitAndThrow(\n            new IntegrationError(\n              `No handler for widget actions. You'll need to add widgets.onAction to your ChatKit options.`,\n            ),\n          )\n        }\n        return onAction(action, widgetItem)\n      },\n      onEntitySearch: async ({ query }) => this.#opts?.entities?.onTagSearch?.(query) ?? [],\n      onEntityClick: async ({ entity }) => this.#opts?.entities?.onClick?.(entity),\n      onEntityPreview: async ({ entity }) =>\n        this.#opts?.entities?.onRequestPreview?.(entity) ?? { preview: null },\n      onGetClientSecret: async (currentClientSecret: string | null) => {\n        if (\n          !this.#opts ||\n          !(\"getClientSecret\" in this.#opts.api) ||\n          !this.#opts.api.getClientSecret\n        ) {\n          // ~Impossible since the existence of this handler is the only way\n          // that we end up creating the kind of ApiClient that would call this handler in the first place.\n          this.#emitAndThrow(\n            new IntegrationError(\n              \"Could not refresh the session because ChatKitOptions.api.getClientSecret is not configured.\",\n            ),\n          )\n        }\n\n        return this.#opts.api.getClientSecret(currentClientSecret ?? null)\n      },\n    },\n  })\n\n  constructor({ profile }: { profile: ChatKitProfile }) {\n    super()\n    this.profile = profile\n    this.capabilities = getCapabilities(profile)\n  }\n\n  protected setProfile(profile: ChatKitProfile) {\n    this.profile = profile\n    this.capabilities = getCapabilities(profile)\n  }\n\n  #emitAndThrow(error: Error): never {\n    this.dispatchEvent(new CustomEvent(\"chatkit.error\", { detail: { error } }))\n    throw error\n  }\n\n  #setOptionsDataAttributes(options: ChatKitOptions) {\n    this.dataset.colorScheme =\n      typeof options.theme === \"string\" ? options.theme : options.theme?.colorScheme ?? \"light\"\n  }\n\n  #handleFrameLoad = () => {\n    this.dataset.loaded = \"true\"\n    this.dispatchEvent(new CustomEvent(\"chatkit.ready\", { bubbles: true, composed: true }))\n    this.#resolveLoaded?.()\n  }\n\n  connectedCallback() {\n    const style = document.createElement(\"style\")\n    style.textContent = `\n      :host {\n        display: block;\n        position: relative;\n        height: 100%;\n        width: 100%;\n      }\n      .ck-iframe {\n        border: none;\n        position: absolute;\n        inset: 0;\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        color-scheme: light only;\n      }\n      .ck-wrapper {\n        position: absolute;\n        inset: 0;\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        opacity: 0;\n      }\n      :host([data-color-scheme=\"dark\"]) .ck-iframe {\n        color-scheme: dark only;\n      }\n      :host([data-loaded=\"true\"]) .ck-wrapper {\n        opacity: 1;\n      }\n    `\n\n    const frame = document.createElement(\"iframe\")\n    frame.className = \"ck-iframe\"\n    frame.name = \"chatkit\"\n    frame.role = \"presentation\"\n    frame.tabIndex = 0\n    frame.setAttribute(\"allowtransparency\", \"true\")\n    frame.setAttribute(\"frameborder\", \"0\")\n    frame.setAttribute(\"scrolling\", \"no\")\n    frame.setAttribute(\"allow\", \"clipboard-read; clipboard-write\")\n    this.#frame = frame\n\n    // not sure we still need this..\n    const wrapper = document.createElement(\"div\")\n    wrapper.className = \"ck-wrapper\"\n    wrapper.appendChild(frame)\n    this.#wrapper = wrapper\n\n    this.#shadow.append(style)\n\n    if (import.meta.env.DEV) {\n      this.#messenger.on(\"development_only_force_page_reload\", () => {\n        window.location.reload()\n      })\n    }\n    this.#messenger.on(\"left_header_icon_click\", () => {\n      this.#opts?.header?.leftAction?.onClick()\n    })\n    this.#messenger.on(\"right_header_icon_click\", () => {\n      this.#opts?.header?.rightAction?.onClick()\n    })\n    this.#messenger.on(\"public_event\", ([event, data]) => {\n      if (!this.capabilities.events.has(event)) return\n      if (event === \"error\" && \"error\" in data) {\n        // Custom error handling to convert frame-safe errors back into real Errors\n        const error = IntegrationError.fromPossibleFrameSafeError(data.error) ?? data.error\n        this.dispatchEvent(new CustomEvent(\"chatkit.error\", { detail: { error } }))\n        return\n      }\n\n      this.dispatchEvent(new CustomEvent(`chatkit.${event}`, { detail: data }))\n    })\n    this.#messenger.on(\"unmount\", () => {\n      // Remove the iframe and wrapper from the shadow DOM if they exist\n      if (this.#wrapper && this.#shadow.contains(this.#wrapper)) {\n        this.#shadow.removeChild(this.#wrapper)\n        this.#wrapper = undefined\n        this.#frame = undefined\n      }\n    })\n    this.#messenger.on(\n      \"capabilities_profile_change\",\n      ({ profile }: { profile: ChatKitProfile }) => {\n        this.setProfile(profile)\n      },\n    )\n\n    frame.addEventListener(\"load\", this.#handleFrameLoad, { once: true })\n\n    this.#maybeInit()\n  }\n\n  #initialized = false\n  #maybeInit() {\n    if (this.#initialized || !this.#frame || !this.#opts) {\n      return\n    }\n    this.#initialized = true\n    this.#setOptionsDataAttributes(this.#opts)\n    const frameURL = new URL(CHATKIT_FRAME_URL)\n    frameURL.hash = encodeBase64({\n      options: getInnerOptions(this.#opts),\n      referrer: window.location.origin,\n      profile: this.profile,\n    } satisfies ChatKitFrameParams)\n    this.#messenger.connect()\n    this.#frame.src = frameURL.toString()\n    // Impossible to not exist\n    if (this.#wrapper) {\n      this.#shadow.append(this.#wrapper)\n    }\n  }\n\n  disconnectedCallback() {\n    this.#frame?.removeEventListener(\"load\", this.#handleFrameLoad)\n    this.#messenger.disconnect()\n  }\n\n  protected applySanitizedOptions(newOptions: ChatKitOptions) {\n    this.#opts = newOptions\n    if (this.#initialized) {\n      this.#setOptionsDataAttributes(this.#opts)\n      this.#loaded.then(() => {\n        this.#messenger.commands.setOptions(getInnerOptions(newOptions))\n      })\n    } else {\n      this.#maybeInit()\n    }\n  }\n\n  setOptions(newOptions: TRawOptions) {\n    try {\n      const sanitized = this.sanitizeOptions(newOptions)\n      this.applySanitizedOptions(sanitized)\n    } catch (error) {\n      this.#emitAndThrow(\n        error instanceof Error ? error : new IntegrationError(\"Failed to parse options\"),\n      )\n    }\n  }\n\n  @requireCommandCapability\n  async focusComposer() {\n    await this.#loaded\n    this.#frame?.focus()\n    await this.#messenger?.commands.focusComposer()\n  }\n\n  @requireCommandCapability\n  async fetchUpdates() {\n    await this.#loaded\n    await this.#messenger?.commands.fetchUpdates()\n  }\n\n  @requireCommandCapability\n  async sendUserMessage(params: {\n    text: string\n    reply?: string\n    attachments?: Attachment[]\n    toolChoice?: ToolChoice\n    model?: string\n    newThread?: boolean\n  }) {\n    await this.#loaded\n    await this.#messenger?.commands.sendUserMessage(params)\n  }\n\n  @requireCommandCapability\n  async setComposerValue(params: { text: string; reply?: string; attachments?: Attachment[] }) {\n    await this.#loaded\n    await this.#messenger?.commands.setComposerValue(params)\n  }\n\n  @requireCommandCapability\n  async setThreadId(threadId: string | null) {\n    await this.#loaded\n    await this.#messenger?.commands.setThreadId({ threadId })\n  }\n\n  @requireCommandCapability\n  async shareThread() {\n    await this.#loaded\n    return this.#messenger?.commands.shareThread()\n  }\n\n  @requireCommandCapability\n  async sendCustomAction(\n    action: { type: string; payload?: Record<string, unknown> },\n    itemId?: string,\n  ) {\n    await this.#loaded\n    return this.#messenger?.commands.sendCustomAction({ action, itemId })\n  }\n\n  @requireCommandCapability\n  async showHistory() {\n    await this.#loaded\n    return this.#messenger?.commands.showHistory()\n  }\n\n  @requireCommandCapability\n  async hideHistory() {\n    await this.#loaded\n    return this.#messenger?.commands.hideHistory()\n  }\n\n  @requireCommandCapability\n  async setTrainingOptOut(value: boolean) {\n    await this.#loaded\n    return this.#messenger?.commands.setTrainingOptOut({ value })\n  }\n}\n\nexport interface ChatKitBaseElement<TRawOptions, TSanitizedOptions extends ChatKitOptions>\n  extends HTMLElement {\n  addEventListener<K extends keyof ChatKitBaseElementEventMap>(\n    type: K,\n    listener: (\n      this: ChatKitBaseElement<TRawOptions, TSanitizedOptions>,\n      ev: ChatKitBaseElementEventMap[K],\n    ) => void,\n    options?: boolean | AddEventListenerOptions,\n  ): void\n\n  removeEventListener<K extends keyof ChatKitBaseElementEventMap>(\n    type: K,\n    listener: (\n      this: ChatKitBaseElement<TRawOptions, TSanitizedOptions>,\n      ev: ChatKitBaseElementEventMap[K],\n    ) => void,\n    options?: boolean | EventListenerOptions,\n  ): void\n}\n","import { ChatKitElementBase } from \"./ChatKitElementBase\"\n\nimport type { ChatKitOptions } from \"chatkit-web-shared/types\"\n\nexport class ChatKitElement extends ChatKitElementBase<ChatKitOptions> {\n  constructor() {\n    super({ profile: \"chatkit\" })\n  }\n\n  override sanitizeOptions(options: ChatKitOptions) {\n    // TODO: Sanitize unknown options instead of assuming it is of type ChatKitOptions.\n    // The below deletions are expedient for now to prevent ChatGPTShell-only options from\n    // being passed to ChatKit.\n    delete options.threadItemActions?.share\n    return options\n  }\n}\n\nexport function registerChatKitElement(tag = \"openai-chatkit\") {\n  // SSR-safe guard\n  if (!(\"customElements\" in globalThis)) return\n\n  if (!customElements.get(tag)) {\n    customElements.define(tag, ChatKitElement)\n  }\n}\n","import { registerChatKitElement } from \"./ChatKitElement\"\n\nregisterChatKitElement()\n"],"mappings":"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","names":["toUrlBase64","bin","encodeBase64","value","json","bytes","bin","b","toUrlBase64","EventEmitter","event","callback","args","data","getBytes","stream","onChunk","reader","result","getLines","onLine","buffer","position","fieldLength","discardTrailingNewline","arr","concat","bufLength","lineStart","lineEnd","getMessages","onId","onRetry","onMessage","message","newMessage","decoder","line","field","valueOffset","value","retry","a","b","res","EventStreamContentType","DefaultRetryInterval","LastEventId","fetchEventSource","input","_a","inputSignal","inputHeaders","inputOnOpen","onmessage","onclose","onerror","openWhenHidden","inputFetch","rest","__rest","resolve","reject","headers","curRequestController","onVisibilityChange","create","retryInterval","retryTimer","dispose","fetch","onopen","defaultOnOpen","response","getBytes","getLines","getMessages","id","retry","err","interval","innerErr","contentType","FRAME_SAFE_ERROR_KEY","FrameSafeError","error","HttpError","_HttpError","message","res","error","FRAME_SAFE_ERROR_KEY","safeError","parsedError","FrameSafeHttpError","_FrameSafeHttpError","nextDelay","attempt","maxRetryDelay","baseDelayMs","max","RetryableError","cause","fetchEventSourceWithRetry","url","params","retryAttempt","fetchEventSource","res","httpError","FrameSafeHttpError","error","nextDelay","IntegrationError","_IntegrationError","message","error","FRAME_SAFE_ERROR_KEY","safeError","parsedError","FrameSafeIntegrationError","BaseMessenger","handlers","target","targetOrigin","fetch","args","EventEmitter","data","transfer","message","url","params","resolve","reject","nonce","formData","key","value","onmessage","signal","rest","_","command","event","callback","controller","res","json","FrameSafeHttpError","error","fetchEventSourceWithRetry","FrameSafeIntegrationError","response","handler","integrationError","IntegrationError","httpError","HttpError","ChatFrameMessenger","BaseMessenger","_","removeMethods","obj","seen","c","result","key","value","BASE_CAPABILITY_ALLOWLIST","BASE_CAPABILITY_DENYLIST","PROFILE_TO_RULES","getCapabilities","profile","rules","effective","capability","commands","events","backend","threadItems","_ALL_CAPABILITIES","CHATKIT_FRAME_URL","getInnerOptions","options","removeMethods","requireCommandCapability","value","context","command","args","IntegrationError","_setTrainingOptOut_dec","_hideHistory_dec","_showHistory_dec","_sendCustomAction_dec","_shareThread_dec","_setThreadId_dec","_setComposerValue_dec","_sendUserMessage_dec","_fetchUpdates_dec","_focusComposer_dec","_a","_opts","_frame","_wrapper","_shadow","_resolveLoaded","_loaded","_messenger","_ChatKitElementBase_instances","emitAndThrow_fn","setOptionsDataAttributes_fn","_handleFrameLoad","_initialized","maybeInit_fn","_init","ChatKitElementBase","profile","__runInitializers","__privateAdd","__publicField","resolve","__privateSet","ChatFrameMessenger","customFetch","__privateGet","inputAttributes","input","key","respond","name","params","onClientTool","__privateMethod","action","widgetItem","onAction","query","entity","currentClientSecret","getCapabilities","style","frame","wrapper","event","data","error","newOptions","sanitized","threadId","itemId","__decoratorStart","frameURL","encodeBase64","__decorateElement","__decoratorMetadata","ChatKitElement","ChatKitElementBase","options","registerChatKitElement","tag","registerChatKitElement"]}